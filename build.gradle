buildscript {
    repositories {
        jcenter()
        maven {
            name = "shared"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            url = "https://plugins.gradle.org/m2/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            name = "sponge"
            url "http://repo.spongepowered.org/maven/"
        }
        maven {
            // location of the maven that hosts JEI files
            name = "Progwml6 maven"
            url = "https://dvs1.progwml6.com/files/maven/"
        }
        maven {
            // location of a maven mirror for JEI files, as a fallback
            name = "ModMaven"
            url = "https://modmaven.k-4u.nl"
        }

    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
        classpath 'gradle.plugin.org.spongepowered:spongegradle:0.8.1'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

allprojects {
    repositories {
        maven {
            url 'https://jitpack.io'
        }
        maven {
            name = "CraftTweaker/ContentTweaker"
            url = "http://maven.blamejared.com"
        }
        maven {
            name = "Tinkers/JEI"
            url = "http://dvs1.progwml6.com/files/maven"
        }
    }
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "org.spongepowered.plugin"
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'maven-publish'
apply plugin: 'java'


version = "${Mod_Version}"
group = "com.github.porpit" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "UltimateStack-1.12.2"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}
minecraft {
    version = "1.12.2-14.23.5.2768"
    runDir = "run"
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20171003"
    replace "%UltimateStackVersion%", project.version
    replace "%PPCoreVersion%", "${RequestCoreVersion}"
    replaceIn "UltimateStack.java"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}
mixin {
    add sourceSets.main, "mixins.ultimatestack.refmap.json"
}
repositories {
    maven { url = 'https://repo.spongepowered.org/maven' }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
    maven {
        name = "ic2"
        url = "http://maven.ic2.player.to"
    }
    maven {
        name = "jared"
        url = "http://maven.blamejared.com"
    }
    
    maven {
        name = "EnderIO"
        url = "https://maven.tterrag.com/"
    }
    maven {
        name = "CoFH Maven"
        url = "http://maven.covers1624.net"
    }

}
configurations {
    shade
    compile.extendsFrom shade
}
dependencies {

    compileOnly fileTree(dir: 'libs', include: ['*.jar'])
    compileOnly group: 'net.industrial-craft', name: 'industrialcraft-2', version: '2.8.108-ex112'
    compileOnly "slimeknights.mantle:Mantle:1.12-1.3.3.49"
    compileOnly "slimeknights:TConstruct:1.12.2-2.13.0.171"
    compileOnly "blusunrize:ImmersiveEngineering:0.12-89-+"
    compileOnly "com.github.porpit:PPCore:3.1.0"
    deobfProvided "cofh:CoFHWorld:1.12.2-1.1.1.+:universal"
    deobfProvided "cofh:CoFHCore:1.12.2-4.4.0.+:universal"
    deobfProvided "cofh:ThermalExpansion:1.12.2-5.4.0.+:universal"
    runtime "com.github.porpit:PPCore:3.1.0"
    // compile against the JEI API but do not include it at runtime
//    deobfCompile "mezz.jei:jei_${mc_version}:${jei_version}:api"
    // at runtime, use the full JEI jar
//    runtime "mezz.jei:jei_${mc_version}:${jei_version}"
    shade('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        transitive = false
    }
}
dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

def coreModManifest = {
    attributes "Maven-Artifact": "${group}:${name}:${version}"
    attributes "FMLCorePlugin": "com.porpit.ultimatestack.core.UltimateStackFMLLoadingPlugin"
    attributes "TweakClass": "org.spongepowered.asm.launch.MixinTweaker"
    attributes "TweakOrder": 1
    attributes "FMLCorePluginContainsFMLMod": true
    attributes "ForceLoadAsMod": true
}

jar {
    manifest coreModManifest

    from sourceSets.main.output

    configurations.shade.each { dep ->
        from(project.zipTree(dep)) {
            rename 'LICENSE.txt', 'org/spongepowered/LICENSE.txt'

            exclude 'META-INF/*.SF'
            exclude 'META-INF/*.RSA'
            exclude 'META-INF/*.MF'

            exclude '**/*.html'
        }
    }


    rename '(.+_at.cfg)', 'META-INF/$1'
}
